---
#################################################################
# TODO: There are some open source Ansible playbooks/methods/etc. for
# dealing with WordPress. It is particularly challenging that WordPress needs
# to be 'installed' by the user by submitting the usual '5 Minute Install'
# form, that is, HTML form via HTTP... But maybe the options that WordPress
# expects from that form submission can also somehow be supplied via
# Ansible parameters... This would solve a lot of problems!
#################################################################

- name: Download Wordpress
  unarchive:
    src: "https://wordpress.org/wordpress-{{ wordpress_version }}.tar.gz"
    dest: "/var/www/html/"
    remote_src: yes

- name: Create WordPress database
  community.mysql.mysql_db:
    name: "{{ database_name }}"
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock

# TODO: feature/fix-secrets
# TODO: I just noticed that you can prompt for user input with Ansible,
# this might be helpful here:
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/pause_module.html
# TODO: Instead of providing the file wp-config.php ourselves, we should simply
# use sed or something similar to edit the file provided by WordPress, otherwise we
# cannot guarantee the integrity of the WordPress version that we install - we would
# overwrite WordPress' version of that file with our own, probably outdated.
- name: Provide WordPress config
  template:
    # TODO: Also beware of the likely security vulnerability we create by not providing
    # the WP_AUTH variables.
    src: wp-config.php
    dest: /var/www/html/wordpress/wp-config.php
    owner: nobody
    group: nogroup
    mode: '0644'

- name: Set file ownership for wp-content/
  file:
    path: /var/www/html/wordpress/wp-content/
    state: directory
    recurse: yes
    owner: www-data
    group: www-data

- name: Restart Apache
  service:
    name: apache2
    state: reloaded
